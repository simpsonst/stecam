#!/bin/bash
# -*- c-basic-offset: 4; indent-tabs-mode: nil -*-

## Copyright 2018-19, Lancaster University
## All rights reserved.
## 
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions are
## met:
## 
##  * Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 
##  * Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the
##    distribution.
## 
##  * Neither the name of the copyright holder nor the names of
##    its contributors may be used to endorse or promote products derived
##    from this software without specific prior written permission.
## 
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
## LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
## A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
## OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
## SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
## LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
## DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
## THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
## (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
## OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
##
## Author: Steven Simpson <https://github.com/simpsonst>

SHARE_DIR="$(readlink -f "${0%/*}")"

source "${SHARE_DIR}/defaults.sh"
source "${SHARE_DIR}/common.sh"

function list_files () {
    inotifywait -e close_write "$PROCESSED_DIR/" --format '%f' -m 2> /dev/null
}

boundary=kasduyc69c34ivkcuqbnqx4rkaghsjhcbasjcj

function doit () {
    ## Start the multipart message.
    printf 'Content-Type: multipart/x-mixed-replace; boundary=%s\n' "$boundary"

    ## Prevent capture from being suppressed.
    rm -f "$SUPPRESS_FILE"

    ## Read all images files created from now.
    while read filename ; do
        ## Keep preventing capture suppression.
        rm -f "$REQUEST_FLAG"

        ## Get the file length so we can specify the correct MIME
        ## header.
        length=$(stat -c '%s' "$PROCESSED_DIR/$filename")

        ## Print the MIME multipart boundary and header for the next
        ## image.
        printf -- '\n--%s\n' "$boundary"
        printf 'Content-Type: image/jpeg\n'
        printf 'Content-Length: %d\n' "$length"
        # date -r "$PROCESSED_DIR/$filename" \
        #      '+Last-Modified: %a, %d %b %Y %H:%M:%S %Z'
        printf '\n'
        ## Complete the part with the image content.
        cat "$PROCESSED_DIR/$filename"
    done < <(list_files)

    ## Complete the multipart message, should we ever get here.
    printf -- '\n--%s--\n' "$boundary"
}

doit
